package com.example.flag_emoji

import java.util.Locale

class PhoneUtils {
  companion object {
    private val codeToIsoCode = mapOf(
      "93" to "AF",
      "355" to "AL",
      "213" to "DZ",
      "1684" to "AS",
      "376" to "AD",
      "244" to "AO",
      "1264" to "AI",
      "672" to "AQ",
      "1268" to "AG",
      "54" to "AR",
      "374" to "AM",
      "297" to "AW",
      "61" to "AU",
      "43" to "AT",
      "994" to "AZ",
      "1242" to "BS",
      "973" to "BH",
      "880" to "BD",
      "1246" to "BB",
      "375" to "BY",
      "32" to "BE",
      "501" to "BZ",
      "229" to "BJ",
      "1441" to "BM",
      "975" to "BT",
      "591" to "BO",
      "387" to "BA",
      "267" to "BW",
      "55" to "BR",
      "246" to "IO",
      "1284" to "VG",
      "673" to "BN",
      "359" to "BG",
      "226" to "BF",
      "257" to "BI",
      "855" to "KH",
      "237" to "CM",
      "1250" to "CA",
      "1604" to "CA",
      "1778" to "CA",
      "1780" to "CA",
      "1506" to "CA",
      "1819" to "CA",
      "1289" to "CA",
      "1905" to "CA",
      "1778" to "CA",
      "1902" to "CA",
      "1709" to "CA",
      "1514" to "CA",
      "1780" to "CA",
      "1519" to "CA",
      "1403" to "CA",
      "1418" to "CA",
      "1807" to "CA",
      "1416" to "CA",
      "1647" to "CA",
      "1902" to "CA",
      "1204" to "CA",
      "1613" to "CA",
      "1867" to "CA",
      "1450" to "CA",
      "1705" to "CA",
      "1306" to "CA",
      "1238" to "CV",
      "1345" to "KY",
      "236" to "CF",
      "235" to "TD",
      "56" to "CL",
      "86" to "CN",
      "61" to "CX",
      "61" to "CC",
      "57" to "CO",
      "269" to "KM",
      "682" to "CK",
      "506" to "CR",
      "385" to "HR",
      "53" to "CU",
      "599" to "CW",
      "357" to "CY",
      "420" to "CZ",
      "243" to "CD",
      "45" to "DK",
      "253" to "DJ",
      "1767" to "DM",
      "1809" to "DO",
      "1829" to "DO",
      "1849" to "DO",
      "670" to "TL",
      "593" to "EC",
      "20" to "EG",
      "503" to "SV",
      "240" to "GQ",
      "291" to "ER",
      "372" to "EE",
      "251" to "ET",
      "500" to "FK",
      "298" to "FO",
      "679" to "FJ",
      "358" to "FI",
      "33" to "FR",
      "689" to "PF",
      "241" to "GA",
      "220" to "GM",
      "995" to "GE",
      "49" to "DE",
      "233" to "GH",
      "350" to "GI",
      "30" to "GR",
      "299" to "GL",
      "1473" to "GD",
      "1671" to "GU",
      "502" to "GT",
      "441481" to "GG",
      "224" to "GN",
      "245" to "GW",
      "592" to "GY",
      "509" to "HT",
      "504" to "HN",
      "852" to "HK",
      "36" to "HU",
      "354" to "IS",
      "91" to "IN",
      "62" to "ID",
      "98" to "IR",
      "964" to "IQ",
      "353" to "IE",
      "441624" to "IM",
      "972" to "IL",
      "39" to "IT",
      "225" to "CI",
      "1876" to "JM",
      "81" to "JP",
      "441534" to "JE",
      "962" to "JO",
      "7" to "KZ",
      "254" to "KE",
      "686" to "KI",
      "383" to "XK",
      "965" to "KW",
      "996" to "KG",
      "856" to "LA",
      "371" to "LV",
      "961" to "LB",
      "266" to "LS",
      "231" to "LR",
      "218" to "LY",
      "423" to "LI",
      "370" to "LT",
      "352" to "LU",
      "853" to "MO",
      "389" to "MK",
      "261" to "MG",
      "265" to "MW",
      "60" to "MY",
      "960" to "MV",
      "223" to "ML",
      "356" to "MT",
      "692" to "MH",
      "222" to "MR",
      "230" to "MU",
      "262" to "YT",
      "52" to "MX",
      "691" to "FM",
      "373" to "MD",
      "377" to "MC",
      "976" to "MN",
      "382" to "ME",
      "1664" to "MS",
      "212" to "MA",
      "258" to "MZ",
      "95" to "MM",
      "264" to "NA",
      "674" to "NR",
      "977" to "NP",
      "31" to "NL",
      "599" to "AN",
      "687" to "NC",
      "64" to "NZ",
      "505" to "NI",
      "227" to "NE",
      "234" to "NG",
      "683" to "NU",
      "850" to "KP",
      "1670" to "MP",
      "47" to "NO",
      "968" to "OM",
      "92" to "PK",
      "680" to "PW",
      "970" to "PS",
      "507" to "PA",
      "675" to "PG",
      "595" to "PY",
      "51" to "PE",
      "63" to "PH",
      "64" to "PN",
      "48" to "PL",
      "351" to "PT",
      "1787" to "PR",
      "1939" to "PR",
      "974" to "QA",
      "242" to "CG",
      "262" to "RE",
      "40" to "RO",
      "7" to "RU",
      "250" to "RW",
      "590" to "BL",
      "290" to "SH",
      "1869" to "KN",
      "1758" to "LC",
      "590" to "MF",
      "508" to "PM",
      "1784" to "VC",
      "685" to "WS",
      "378" to "SM",
      "239" to "ST",
      "966" to "SA",
      "221" to "SN",
      "381" to "RS",
      "248" to "SC",
      "232" to "SL",
      "65" to "SG",
      "1721" to "SX",
      "421" to "SK",
      "386" to "SI",
      "677" to "SB",
      "252" to "SO",
      "27" to "ZA",
      "82" to "KR",
      "211" to "SS",
      "34" to "ES",
      "94" to "LK",
      "249" to "SD",
      "597" to "SR",
      "47" to "SJ",
      "268" to "SZ",
      "46" to "SE",
      "41" to "CH",
      "963" to "SY",
      "886" to "TW",
      "992" to "TJ",
      "255" to "TZ",
      "66" to "TH",
      "228" to "TG",
      "690" to "TK",
      "676" to "TO",
      "1868" to "TT",
      "216" to "TN",
      "90" to "TR",
      "993" to "TM",
      "1649" to "TC",
      "688" to "TV",
      "1340" to "VI",
      "256" to "UG",
      "380" to "UA",
      "971" to "AE",
      "44" to "GB",
      "1" to "US",
      "598" to "UY",
      "998" to "UZ",
      "678" to "VU",
      "379" to "VA",
      "58" to "VE",
      "84" to "VN",
      "681" to "WF",
      "212" to "EH",
      "967" to "YE",
      "260" to "ZM",
      "263" to "ZW",
    )

    fun getFlagEmoji(code: String): String {
      try {
        val id = codeToIsoCode.getOrElse(code) {
          return ""
        }
        return countryCodeToEmojiFlag(id)
      } catch (ex: Exception) {
        return ""
      }
    }

    private fun countryCodeToEmojiFlag(countryCode: String): String {
      return countryCode
        .uppercase(Locale.US)
        .map { char ->
          Character.codePointAt("$char", 0) - 0x41 + 0x1F1E6
        }
        .map { codePoint ->
          Character.toChars(codePoint)
        }
        .joinToString(separator = "") { charArray ->
          String(charArray)
        }
    }
  }
}